Blob :: blob {
    a: bool,
    b: int,
    c: float,
}

BlobBlob :: blob {
    _blob: Blob,
}

start :: fn do
    b1 := Blob {
        a: true,
        b: 1,
        c: 0.,
    }

    b1_eq := Blob {
        a: true,
        b: 1,
        c: 0.,
    }

    b2 := Blob {
        a: false,
        b: 420,
        c: .0,
    }

    b1 <=> b1_eq
    b1 != b2 <=> true

    bb1 := BlobBlob {
        _blob: b1,
    }

    bb1_eq := BlobBlob {
        _blob: b1,
    }

    bb1 <=> bb1_eq

    bb1_eq2 := BlobBlob {
        _blob: b1_eq,
    }

    bb1 <=> bb1_eq2

    bb2 := BlobBlob {
        _blob: b2,
    }

    bb1 != bb2 <=> true
end
